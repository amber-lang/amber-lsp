---
source: tests/grammar/alpha034.rs
expression: "parse(&tokenize(\"[1, 2 3 let\"))"
---
(
    Some(
        [
            (
                Statement(
                    (
                        Expression(
                            (
                                Array(
                                    [
                                        (
                                            Number(
                                                (
                                                    1.0,
                                                    1..2,
                                                ),
                                            ),
                                            1..2,
                                        ),
                                        (
                                            Number(
                                                (
                                                    2.0,
                                                    4..5,
                                                ),
                                            ),
                                            4..5,
                                        ),
                                        (
                                            Number(
                                                (
                                                    3.0,
                                                    6..7,
                                                ),
                                            ),
                                            6..7,
                                        ),
                                    ],
                                ),
                                0..7,
                            ),
                        ),
                        0..7,
                    ),
                ),
                0..7,
            ),
            (
                Statement(
                    (
                        VariableInit(
                            (
                                "let",
                                8..11,
                            ),
                            (
                                "",
                                11..11,
                            ),
                            (
                                Error,
                                11..11,
                            ),
                        ),
                        8..11,
                    ),
                ),
                8..11,
            ),
        ],
    ),
    [
        found "3" at 6..7 expected '"."', '"as"', '"is"', '"*"', '"/"', '"%"', '"+"', '"-"', '">="', '">"', '"<="', '"<"', '"=="', '"!="', '"and"', '"or"', '".."', '"then"', or '","',
        found "let" at 8..11 expected '"."', '"as"', '"is"', '"*"', '"/"', '"%"', '"+"', '"-"', '">="', '">"', '"<="', '"<"', '"=="', '"!="', '"and"', '"or"', '".."', '"then"', '","', or '"]"',
        found end of input at 8..11 expected something else,
        found end of input at 11..11 expected '"="',
        found end of input at 11..11 expected "type", or "expression",
    ],
)
