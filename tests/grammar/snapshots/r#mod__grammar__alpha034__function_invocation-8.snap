---
source: tests/grammar/alpha034.rs
expression: "parse(&tokenize(\"func(1 2 let\"))"
---
(
    Some(
        [
            (
                Statement(
                    (
                        Expression(
                            (
                                FunctionInvocation(
                                    [],
                                    (
                                        "func",
                                        0..4,
                                    ),
                                    [
                                        (
                                            Number(
                                                (
                                                    1.0,
                                                    5..6,
                                                ),
                                            ),
                                            5..6,
                                        ),
                                        (
                                            Number(
                                                (
                                                    2.0,
                                                    7..8,
                                                ),
                                            ),
                                            7..8,
                                        ),
                                    ],
                                    None,
                                ),
                                0..8,
                            ),
                        ),
                        0..8,
                    ),
                ),
                0..8,
            ),
            (
                Statement(
                    (
                        VariableInit(
                            (
                                "let",
                                9..12,
                            ),
                            (
                                "",
                                12..12,
                            ),
                            (
                                Error,
                                12..12,
                            ),
                        ),
                        9..12,
                    ),
                ),
                9..12,
            ),
        ],
    ),
    [
        found "2" at 7..8 expected '"."', '"as"', '"is"', '"*"', '"/"', '"%"', '"+"', '"-"', '">="', '">"', '"<="', '"<"', '"=="', '"!="', '"and"', '"or"', '".."', '"then"', or '","',
        found "let" at 9..12 expected '"."', '"as"', '"is"', '"*"', '"/"', '"%"', '"+"', '"-"', '">="', '">"', '"<="', '"<"', '"=="', '"!="', '"and"', '"or"', '".."', '"then"', '","', or '")"',
        found end of input at 9..12 expected something else,
        found end of input at 12..12 expected '"="',
        found end of input at 12..12 expected "type", or "expression",
    ],
)
