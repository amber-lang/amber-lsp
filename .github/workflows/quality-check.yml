name: Quality Check
on:
  push:
    branches: [master]
  pull_request:

jobs:
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cargo check
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Format check
        run: cargo fmt --all -- --check

  test:
    needs:
      - quality-check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Run tests
        run: cargo nextest run --no-fail-fast --hide-progress-bar --status-level fail

  coverage:
    needs:
      - quality-check
      - test
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build script
        uses: docker://ghcr.io/amber-lang/amber:alpine-0.4.0-alpha
        with:
          args: |
            build ./run_coverage.ab ./run_coverage.sh

      - name: Test coverage
        run: ./run_coverage.sh xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
